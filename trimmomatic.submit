# Give Docker and argument and then set output, error, and log.
universe = Docker
docker_image = staphb/trimmomatic
#arguments = "$(RUN)"
executable = trimmomatic.sh

output = trimmomatic_5075_10_S1.out
error = trimmomatic_5075_10_S1.err
log = trimmomatic_5075_10_S1.log

# Rules to transfer and transferring files
transfer_executable = TRUE
should_transfer_files = YES
when_to_transfer_output = ON_EXIT

staging_prefix = file:///staging/groups/pepperell_group/Mtb_RNAseq
results_staging_prefix = file:///staging/groups/pepperell_group/Mtb_RNAseq/Results
multiqc_staging_prefix = file:///staging/groups/pepperell_group/Mtb_RNAseq/Results/MultiQC
transfer_input_files = $(staging_prefix)/5075_10_S1_R1_001.fastq.gz , $(staging_prefix)/5075_10_S1_R2_001.fastq.gz, $(staging_prefix)/adapters.fa
transfer_output_remaps = "5075_10_S1_1U.fq.gz = $(results_staging_prefix)/5075_10_S1_1U.fq.gz; 5075_10_S1_2U.fq.gz = $(results_staging_prefix)/5075_10_S1_2U.fq.gz; 5075_10_S1_1P.fq.gz = $(results_staging_prefix)/5075_10_S1_1P.fq.gz; 5075_10_S1_2P.fq.gz = $(results_staging_prefix)/5075_10_S1_2P.fq.gz"

# Resource request and Queue job
requirements = (Target.HasCHTCStaging==TRUE)
request_cpus = 4
request_memory = 20GB
request_disk = 20GB

queue
